version: 2.1

jobs:
  test:
    parameters:
      docker-image:
        type: string
    working_directory: ~/project
    docker:
      - image: << parameters.docker-image >>
    steps:
      - checkout
      - restore_cache:
          key: project-{{ checksum "project.clj" }}
      - run: lein with-profile +1.10 test-no-bench
      - run: lein with-profile +1.12 test-no-bench
      - run: lein with-profile +1.11 test-all
      - run: lein with-profile +1.11 eastwood
      - save_cache:
          paths:
            - ~/.m2
          key: project-{{ checksum "project.clj" }}

  coverage:
    working_directory: ~/project
    docker:
      - image: clojure:temurin-17-lein
    steps:
      - checkout
      - restore_cache:
          key: project-{{ checksum "project.clj" }}
      - run: lein coverage
      - run: >
          curl -Os https://uploader.codecov.io/latest/linux/codecov &&
          chmod +x codecov &&
          ./codecov -f target/coverage/codecov.json -t ${CODECOV_TOKEN} -R .
      - store_artifacts:
          path: target/coverage
      - save_cache:
          paths:
            - ~/.m2
          key: project-{{ checksum "project.clj" }}

  test-lite:
    working_directory: ~/project/lite
    docker:
      - image: clojure:temurin-21-jammy
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          key: project-lite-{{ checksum "deps.edn" }}
      - run: clojure -X:test
      - save_cache:
          paths:
            - ~/.m2
          key: project-lite-{{ checksum "deps.edn" }}

workflows:
  run_all:
    jobs:
      - test:
          matrix:
            parameters:
              docker-image:
                - clojure:temurin-8-lein
                - clojure:temurin-11-lein
                - clojure:openjdk-14-lein
                - clojure:temurin-17-lein
                - clojure:temurin-20-lein
      - test-lite
      - coverage
